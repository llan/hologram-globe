{"version":3,"sources":["StyledGlobe.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledGlobe","useState","locations","setLocations","useEffect","fetch","then","res","json","getAlt","loc","hologrammers","getTooltip","city","state","catColor","d3","map","col","transparentize","globeImageUrl","backgroundImageUrl","pointsData","pointLat","pointLng","pointAltitude","pointRadius","pointColor","d","pointLabel","labelsData","labelLat","labelLng","labelAltitude","labelDotRadius","labelDotOrientation","labelColor","labelText","labelSize","labelResolution","labelLabel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAkDeA,EA7CK,WAClB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRC,MAAM,kBAAkBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACrCF,KAAKH,KACP,IAEH,IAAMM,EAAS,SAACC,GAAD,MAAiC,KAAnBA,EAAIC,cAE3BC,EAAa,SAACF,GAAD,0EAEHA,EAAIG,KAFD,gBAEaH,EAAII,MAFjB,8CAGQJ,EAAIC,aAHZ,+BAObI,EAAWC,IAAgBA,IAAoBC,KAAI,SAAAC,GAAG,OAAIC,YAAe,GAAKD,OAEpF,OAAO,cAAC,IAAD,CACLE,cAAc,kBACdC,mBAAmB,gBAEnBC,WAAYpB,EACZqB,SAAS,WACTC,SAAS,YACTC,cAAehB,EACfiB,YAAa,IACbC,WAAY,SAACC,GAAD,OAAYb,EAASa,EAAEf,OACnCgB,WAAYjB,EAEZkB,WAAY5B,EACZ6B,SAAS,WACTC,SAAS,YACTC,cAAe,SAAAL,GAAC,OAAInB,EAAOmB,GAAK,MAChCM,eAAgB,IAChBC,oBAAqB,iBAAM,UAC3BC,WAAY,SAACR,GAAD,OAAYb,EAASa,EAAEf,OACnCwB,UAAU,OACVC,UAAW,IACXC,gBAAiB,EACjBC,WAAY5B,KCpCD6B,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1099a81b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport Globe from 'react-globe.gl';\nimport { transparentize } from 'polished';\n\nconst StyledGlobe = () => {\n  const [locations, setLocations] = useState([]);\n\n  useEffect(() => {\n    fetch('locations.json').then(res => res.json())\n      .then(setLocations);\n  }, []);\n\n  const getAlt = (loc: any) => loc.hologrammers * .015;\n\n  const getTooltip = (loc: any) => `\n      <div style=\"text-align: center\">\n        <div><b>${loc.city}</b> ${loc.state}</div>\n        <div>Hologrammers: ${loc.hologrammers}</div>\n      </div>\n    `;\n\n  const catColor = d3.scaleOrdinal(d3.schemeCategory10.map(col => transparentize(0.2, col)));\n\n  return <Globe\n    globeImageUrl=\"earth-night.jpg\"\n    backgroundImageUrl=\"night-sky.png\"\n\n    pointsData={locations}\n    pointLat=\"latitude\"\n    pointLng=\"longitude\"\n    pointAltitude={getAlt}\n    pointRadius={0.12}\n    pointColor={(d: any) => catColor(d.city)}\n    pointLabel={getTooltip}\n\n    labelsData={locations}\n    labelLat=\"latitude\"\n    labelLng=\"longitude\"\n    labelAltitude={d => getAlt(d) + 1e-6}\n    labelDotRadius={0.12}\n    labelDotOrientation={() => 'bottom'}\n    labelColor={(d: any) => catColor(d.city)}\n    labelText=\"name\"\n    labelSize={0.15}\n    labelResolution={1}\n    labelLabel={getTooltip}\n  />;\n};\n\nexport default StyledGlobe;","import React from 'react';\nimport './App.css';\nimport Globe from './StyledGlobe';\n\nfunction App() {\n  return (\n    <Globe></Globe>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}